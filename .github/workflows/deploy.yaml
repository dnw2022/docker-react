name: Build and deploy

on:
  push:
    branches:
      - master

env:
  REGISTRY: registry.digitalocean.com/dnw
  REPO: dnw2022
  BUILD_IMAGE: react-test
  BUILD_DOCKERFILE: Dockerfile.dev
  IMAGE: docker-react
  DOCKERFILE: Dockerfile
  TAG: latest
 
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout files
        uses: actions/checkout@v2

      - name: Create build image
        # run: docker build -t dnw2022/react-test -f Dockerfile.dev .
        run: docker build -t ${{ env.BUILD_IMAGE }} -f ${{ env.BUILD_DOCKERFILE }} .
      
      - name: Run tests
        run: docker run -e CI=true ${{ env.BUILD_IMAGE }} npm run test

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Login to Digital Ocean Registry
        run: doctl registry login --expiry-seconds 600

      - name: Create deploy image
        env:
          IMAGE_TAG: "${{ env.REPO }}/${{ env.IMAGE }}:${{ env.TAG }}"
        run: |
          echo "image_tag = ${{ env.IMAGE_TAG }}"
          
          # run: docker build -t dnw2022/docker-react:latest -f Dockerfile .
          docker build -t ${{ env.IMAGE_TAG }} -f ${{ env.DOCKERFILE }} .

      - name: Push deploy image to Digital Ocean Registry
        env:
          DO_TAG: "${{ env.REPO }}/${{ env.IMAGE }}:${{ env.TAG }}"
        run: |
          echo "do_tag = ${{ env.DO_TAG }}"

          # docker image tag dnw2022/docker-react:latest registry.digitalocean.com/dnw/dnw2022:docker-react-latest
          docker image tag ${{ env.IMAGE_TAG }} ${{ env.DO_TAG }}

          # docker push registry.digitalocean.com/dnw/dnw2022:docker-react-latest
          docker push ${{ env.DO_TAG }}

      - name: Redeploy app
        run: doctl apps create --spec ./.deploy/deploy.yaml --access-token ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }} --upsert --wait